{"version":3,"sources":["components/LandingFooter.js","configuration/index.js","components/Header.js","helpers/semantic-ui.js","hocs/Desktop.js","hocs/Mobile.js","hocs/Responsive.js","state/actions.js","state/reducers.js","helpers/string.js","helpers/number.js","helpers/validation.js","state/fetchers.js","helpers/money.js","components/CurrencyInput.js","components/CurrencyExchange.js","containers/MoneyExchange.js","layouts/LandingPage.js","App.js","index.js"],"names":["LandingFooter","Segment","inverted","vertical","style","padding","Container","Grid","divided","stackable","Row","Column","width","as","content","List","link","Item","APP_CONFIG","api","API_ACCESS_KEY","API_RESPONSE_LIFE","API_RESPONSE_LIFE_UNIT","exchange","DEFAULT_CURRENCY","DECIMAL_PRECISION","landing","title","appConfig","getStyles","mobile","fontSize","fontWeight","marginBottom","margin","Header","text","onlyTablet","Responsive","getMinWidth","minWidth","DesktopHoc","state","hideFixedMenu","setState","fixed","showFixedMenu","children","this","props","getWidth","Visibility","once","onBottomPassed","onBottomPassedReverse","textAlign","minHeight","Component","MobileHoc","handleSidebarHide","sidebarOpened","handleToggle","Sidebar","Pushable","maxWidth","Menu","animation","onHide","visible","Pusher","dimmed","ResponsiveHoc","Desktop","Mobile","moneyExchangeActions","SET_RATES","SET_BASE_VALUE","SET_TARGET_VALUE","SHOW_ERROR","setRates","baseCurrency","rates","ratesTimestamp","type","setBaseValue","baseValue","setTargetValue","targetValue","showError","errorMessage","storedState","JSON","parse","localStorage","getItem","moneyExchangeInitialState","isFetching","error","base","baseRate","baseDecimalCharacter","baseInputValue","timestamp","targetCurrency","targetRate","targetDecimalCharacter","targetInputValue","moneyExchangeReducer","action","Object","assign","insertDecimalCharacter","amount","decimalPosition","decimalCharacter","reversed","reverseString","units","slice","decimals","floatNumber","parseFloat","string","split","reverse","join","appConfiguration","getBackwardDecimalPosition","stringNumber","indexOf","getNumberLength","number","length","roundDecimals","decimalPrecision","Math","round","pow","toFixed","splitUnitsDecimals","toString","validateIsInteger","Number","isNaN","isInteger","validateMinuteDifference","maxMinuts","newTimestamp","newDate","Date","oldDate","getFullYear","getMonth","getDate","validateAreSameDay","dateDiff","getRatesEndpoint","accessKey","payload","a","dispatch","Axios","get","responsePromise","data","setItem","stringify","console","fetchRates","baseAmount","targetCurrencyRate","integerBaseAmount","transformToIntegerModel","replace","integerBaseRate","integerTargetCurrencyRate","validateIsExponential","exponentialNumber","transformToExponentialModel","decimalExponent","formated","exponent","rounded","normalizedDecimals","formatExponential","unitExponent","formatMoney","parseInt","stringExponentialNumber","exponentialSign","includes","stringExponent","integerModel","CurrencyInput","currency","value","onChange","readOnly","Input","fluid","placeholder","id","label","character","CurrencyExchange","handleBaseCurrencyChange","handleClick","columns","paddingRight","paddingLeft","Button","icon","labelPosition","onClick","MoneyExchange","useReducer","formatedExchangedValue","useMemo","MoneyHelper","convert","useEffect","event","target","isNumericWithDecimals","RegExp","test","hasValidAmountOfDecimals","limit","position","isBetweenLimits","validateDecimalQuantity","LandingPage","App","className","render","document","getElementById"],"mappings":"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","file":"static/js/main.8c568e23.chunk.js","sourcesContent":["/**\n * LandingFooter\n * Component with hardcoded information to display a footer similar to the provided designs\n */\nimport React from 'react';\nimport { Segment, Container, Grid, Header, List } from 'semantic-ui-react';\n\n/**\n * A footer stolen from the examples provided by the semantic ui documentation whit beautiful\n * hardcoded data.\n *\n * @returns {Component}\n */\nconst LandingFooter = () => {\n  return (\n    <Segment inverted vertical style={{ padding: '5em 0em' }}>\n      <Container>\n        <Grid divided inverted stackable>\n          <Grid.Row>\n            <Grid.Column width={4}>\n              <Header inverted as=\"h4\" content=\"About\" />\n              <List link inverted>\n                <List.Item as=\"a\">Sitemap</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <Header inverted as=\"h4\" content=\"Services\" />\n              <List link inverted>\n                <List.Item as=\"a\">Banana Pre-Order</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <Header inverted as=\"h4\" content=\"Services\" />\n              <List link inverted>\n                <List.Item as=\"a\">DNA FAQ</List.Item>\n              </List>\n            </Grid.Column>\n            <Grid.Column width={4}>\n              <Header inverted as=\"h4\" content=\"Services\" />\n              <List link inverted>\n                <List.Item as=\"a\">How To Access</List.Item>\n              </List>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Container>\n    </Segment>\n  );\n};\n\nexport default LandingFooter;\n","/**\n * Configuration\n * Mockup data with static values used across the application.\n */\nexport const APP_CONFIG = {\n  api: {\n    API_ACCESS_KEY: '33b23d6e01efe285daf21f65e1124757',\n    API_RESPONSE_LIFE: 10,\n    API_RESPONSE_LIFE_UNIT: 'minutes'\n  },\n  exchange: {\n    DEFAULT_CURRENCY: 'EUR',\n    DECIMAL_PRECISION: 4\n  },\n  landing: {\n    title: 'Money Exchange'\n  }\n};\n\nexport default APP_CONFIG;\n","/**\n * Header\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Header as SemanticHeader, Container } from 'semantic-ui-react';\nimport appConfig from '../configuration';\n\nconst { title } = appConfig.landing;\nconst getStyles = mobile => ({\n  fontSize: mobile ? '2em' : '3em',\n  fontWeight: 'normal',\n  marginBottom: 0,\n  margin: mobile ? '1.5em' : '1em'\n});\n\n/**\n * A multi device header component.\n *\n * @returns {Component}\n */\nconst Header = ({ mobile }) => (\n  <Container text>\n    <SemanticHeader\n      as=\"h1\"\n      content={title}\n      inverted\n      style={getStyles(mobile)}\n    />\n  </Container>\n);\n\nHeader.propTypes = {\n  mobile: PropTypes.bool\n};\n\nexport default Header;\n","import { Responsive } from 'semantic-ui-react';\n\nconst { onlyTablet } = Responsive;\n\nexport const getMaxWidth = () => {\n  return onlyTablet.maxWidth;\n};\n\nexport const getMinWidth = () => {\n  return onlyTablet.minWidth;\n};\n\nexport const transformObjectToSemanticUiPayload = rawRates =>\n  Object.keys(rawRates).map(key => ({\n    text: key,\n    value: key,\n    key\n  }));\n","/**\n * Mobile\n * High Order Component which handles desktop views.\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Responsive, Visibility, Segment } from 'semantic-ui-react';\nimport Header from '../components/Header';\nimport { getMinWidth } from '../helpers/semantic-ui';\n\n/**\n * High Order Component which handles the display of components used in the desktop view.\n *\n * @returns {Component}\n */\nclass DesktopHoc extends Component {\n  state = {};\n\n  hideFixedMenu = () => this.setState({ fixed: false });\n  showFixedMenu = () => this.setState({ fixed: true });\n\n  render() {\n    const { children } = this.props;\n\n    return (\n      <Responsive getWidth={getMinWidth} minWidth={getMinWidth()}>\n        <Visibility\n          once={false}\n          onBottomPassed={this.showFixedMenu}\n          onBottomPassedReverse={this.hideFixedMenu}\n        >\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: '35vh', padding: '1em 0em' }}\n            vertical\n          >\n            <Header />\n          </Segment>\n        </Visibility>\n\n        {children}\n      </Responsive>\n    );\n  }\n}\n\nDesktopHoc.propTypes = {\n  children: PropTypes.node\n};\n\nexport default DesktopHoc;\n","/**\n * Mobile\n * High Order Component which handles mobile view.\n */\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport { Segment, Responsive, Sidebar, Menu } from 'semantic-ui-react';\nimport Header from '../components/Header';\nimport { getMinWidth, getMaxWidth } from '../helpers/semantic-ui';\n\n/**\n * High Order Component which handles the display of components used in the mobile view\n *\n * @returns {Component}\n */\nclass MobileHoc extends Component {\n  state = {};\n\n  handleSidebarHide = () => this.setState({ sidebarOpened: false });\n\n  handleToggle = () => this.setState({ sidebarOpened: true });\n\n  render() {\n    const { children } = this.props;\n    const { sidebarOpened } = this.state;\n\n    return (\n      <Responsive\n        as={Sidebar.Pushable}\n        getWidth={getMinWidth}\n        maxWidth={getMaxWidth()}\n      >\n        <Sidebar\n          as={Menu}\n          animation=\"push\"\n          inverted\n          onHide={this.handleSidebarHide}\n          vertical\n          visible={sidebarOpened}\n        ></Sidebar>\n\n        <Sidebar.Pusher dimmed={sidebarOpened}>\n          <Segment\n            inverted\n            textAlign=\"center\"\n            style={{ minHeight: '20vh', padding: '1em 0em' }}\n            vertical\n          >\n            <Header mobile />\n          </Segment>\n\n          {children}\n        </Sidebar.Pusher>\n      </Responsive>\n    );\n  }\n}\n\nMobileHoc.propTypes = {\n  children: PropTypes.node\n};\n\nexport default MobileHoc;\n","/**\n * Responsive\n * High Order Component which handles the different view types.\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport DesktopHoc from './Desktop';\nimport MobileHoc from './Mobile';\n\n/**\n * High Order Component which handles the views based on screen orientation. Currently handles\n * Mobile and Desktop view types.\n *\n * @returns {Component}\n */\nconst ResponsiveHoc = ({ children }) => (\n  <div>\n    <DesktopHoc>{children}</DesktopHoc>\n    <MobileHoc>{children}</MobileHoc>\n  </div>\n);\n\nResponsiveHoc.propTypes = {\n  children: PropTypes.node\n};\n\nexport default ResponsiveHoc;\n","export const moneyExchangeActions = {\n  /** ACTION TYPES */\n  SET_RATES: 'SET_RATES',\n  SET_BASE_VALUE: 'SET_BASE_VALUE',\n  SET_TARGET_VALUE: 'SET_TARGET_VALUE',\n  SHOW_ERROR: 'SHOW_ERROR',\n  /**ACTION CREATORS */\n  setRates: (baseCurrency, rates, ratesTimestamp) => ({\n    type: moneyExchangeActions.SET_RATES,\n    baseCurrency,\n    rates,\n    ratesTimestamp,\n  }),\n  setBaseValue: baseValue => ({\n    type: moneyExchangeActions.SET_BASE_VALUE,\n    baseValue,\n  }),\n  setTargetValue: targetValue => ({\n    type: moneyExchangeActions.SET_TARGET_VALUE,\n    targetValue,\n  }),\n  showError: (errorMessage, baseValue) => ({\n    type: moneyExchangeActions.SHOW_ERROR,\n    baseValue,\n    errorMessage,\n  }),\n};\n\nexport default moneyExchangeActions;\n","import { moneyExchangeActions } from './actions';\n\nconst storedState = JSON.parse(localStorage.getItem('storedRates')) || {};\n\nexport const moneyExchangeInitialState = {\n  isFetching: true,\n  error: false,\n  baseCurrency: storedState.base || 'EUR',\n  baseRate: 1,\n  baseDecimalCharacter: ',',\n  baseInputValue: '',\n  rates: storedState.rates,\n  ratesTimestamp: storedState.timestamp,\n  targetCurrency: 'USD',\n  targetRate: 1.10655,\n  targetDecimalCharacter: '.',\n  targetInputValue: ''\n};\n\nexport const moneyExchangeReducer = (\n  state = moneyExchangeInitialState,\n  action\n) => {\n  switch (action.type) {\n    case moneyExchangeActions.SET_BASE_VALUE:\n      return Object.assign({}, state, {\n        error: false,\n        baseInputValue: action.baseValue\n      });\n    case moneyExchangeActions.SET_RATES:\n      return Object.assign({}, state, {\n        baseCurrency: action.baseCurrency,\n        rates: action.rates,\n        ratesTimestamp: action.ratesTimestamp\n      });\n    case moneyExchangeActions.SET_TARGET_VALUE:\n      return Object.assign({}, state, {\n        error: false,\n        targetInputValue: action.targetValue\n      });\n    case moneyExchangeActions.SHOW_ERROR:\n      return Object.assign({}, state, {\n        error: true,\n        baseInputValue: action.baseValue\n      });\n    default:\n      return state;\n  }\n};\n\nexport default moneyExchangeReducer;\n","export const insertDecimalCharacter = (\n  amount,\n  decimalPosition,\n  decimalCharacter = '.'\n) => {\n  const reversed = reverseString(`${amount}`);\n  const units = reversed.slice(0, decimalPosition);\n  const decimals = reversed.slice(decimalPosition);\n  const floatNumber = parseFloat(\n    reverseString(`${units}${decimalCharacter}${decimals}`)\n  );\n\n  return floatNumber;\n};\n\nexport const normalizeDecimalCharacter = number =>\n  parseFloat(`${number}`.replace(',', '.'));\n\nexport const reverseString = string =>\n  `${string}`\n    .split('')\n    .reverse()\n    .join('');\n","import appConfiguration from '../configuration';\nimport { reverseString } from './string';\nimport { validateIsInteger } from './validation';\n\nconst { DECIMAL_PRECISION } = appConfiguration.exchange;\n\nexport const getBackwardDecimalPosition = (stringNumber, decimalCharacter) =>\n  reverseString(stringNumber).indexOf(decimalCharacter);\n\nexport const getNumberLength = number => `${number}`.length;\n\nexport const formatExponential = (number, exponent, decimalCharacter) => {\n  const rounded = roundDecimals(number);\n\n  const [units, decimals] = splitUnitsDecimals(rounded);\n  const normalizedDecimals = decimals.replace(/0+$/, '');\n\n  return `${units}${decimalCharacter}${normalizedDecimals} x 10^${exponent}`;\n};\n\nexport const formatMoney = (number, decimalCharacter) => {\n  if (!decimalCharacter && validateIsInteger(number)) {\n    return `${number}`;\n  }\n\n  const floatNumber = parseFloat(number);\n  const rounded = roundDecimals(floatNumber);\n\n  const [units, decimals] = splitUnitsDecimals(rounded);\n  const normalizedDecimals = decimals.replace(/0+$/, '');\n\n  return `${units}${decimalCharacter}${normalizedDecimals}`;\n};\n\nexport const limitDecimalQuantity = (stringNumber, decimalIndex, limit = 4) => {\n  return (\n    stringNumber.substr(0, decimalIndex) +\n    stringNumber.substr(decimalIndex, limit + 1)\n  );\n};\n\nexport const roundDecimals = (\n  floatNumber,\n  decimalPrecision = DECIMAL_PRECISION\n) =>\n  (\n    Math.round(floatNumber * Math.pow(10, decimalPrecision)) /\n    Math.pow(10, decimalPrecision)\n  ).toFixed(decimalPrecision);\n\nexport const splitUnitsDecimals = number => number.toString().split('.');\n","import { getBackwardDecimalPosition } from './number';\n\nexport const validateAreSameDay = (oldDate, newDate) => {\n  return (\n    oldDate.getFullYear() === newDate.getFullYear() &&\n    oldDate.getMonth() === newDate.getMonth() &&\n    oldDate.getDate() === newDate.getDate()\n  );\n};\nexport const validateDecimalQuantity = (\n  stringNumber,\n  decimalCharacter,\n  limit = 4\n) => {\n  const position = getBackwardDecimalPosition(stringNumber, decimalCharacter);\n  const isBetweenLimits = position >= -1 && position < limit + 1;\n\n  return isBetweenLimits;\n};\nexport const validateIsExponential = number =>\n  number.toString().indexOf('e') !== -1;\nexport const validateIsInteger = number =>\n  !Number.isNaN(number) && Number.isInteger(parseFloat(number));\nexport const validateMinuteDifference = (\n  maxMinuts,\n  timestamp,\n  newTimestamp\n) => {\n  if (!timestamp) {\n    return false;\n  }\n\n  const newDate = newTimestamp ? new Date(newTimestamp * 1000) : new Date();\n  const oldDate = new Date(timestamp * 1000);\n  const isSameDate = validateAreSameDay(newDate, oldDate);\n\n  if (!isSameDate) {\n    return false;\n  }\n\n  const dateDiff = newDate - oldDate;\n  const difference = Math.round(((dateDiff % 86400000) % 3600000) / 60000);\n\n  return difference >= maxMinuts;\n};\nexport const validateNumericWithDecimals = (stringNumber, decimalCharacter) => {\n  const expression = '^\\\\d*\\\\' + decimalCharacter + '?\\\\d*$';\n  const isNumericWithDecimalsRegExp = new RegExp(expression);\n  const isValid = isNumericWithDecimalsRegExp.test(stringNumber);\n\n  return isValid;\n};\n","import Axios from 'axios';\nimport moneyExchangeActions from './actions';\nimport appConfiguration from '../configuration';\nimport { validateMinuteDifference } from '../helpers/validation';\n\nconst { API_ACCESS_KEY, API_RESPONSE_LIFE } = appConfiguration.api;\n\nexport const getRatesEndpoint = (accessKey = API_ACCESS_KEY) =>\n  `http://data.fixer.io/api/latest?access_key=${accessKey}`;\n\nasync function fetchRates(payload) {\n  try {\n    const { timestamp, dispatch } = payload;\n    const mustUpdateRates = !validateMinuteDifference(\n      API_RESPONSE_LIFE,\n      timestamp\n    );\n\n    if (mustUpdateRates) {\n      const responsePromise = await Axios.get(getRatesEndpoint());\n      const { data } = responsePromise;\n      const { base, rates, timestamp } = data;\n\n      localStorage.setItem(\n        'storedRates',\n        JSON.stringify({ base, rates, timestamp })\n      );\n      dispatch(moneyExchangeActions.setRates(base, rates, timestamp));\n\n      return;\n    }\n\n    const { base, rates, timestamp: ratesTimestamp } =\n      JSON.parse(localStorage.getItem('storedRates')) || {};\n\n    dispatch(moneyExchangeActions.setRates(base, rates, ratesTimestamp));\n  } catch (error) {\n    console.error(error);\n  }\n}\n\nexport default fetchRates;\n","import { validateIsExponential, validateIsInteger } from './validation';\nimport {\n  getNumberLength,\n  formatExponential,\n  formatMoney,\n  splitUnitsDecimals\n} from './number';\nimport { normalizeDecimalCharacter, insertDecimalCharacter } from './string';\n\nclass MoneyHelper {\n  convert(baseAmount, baseRate, targetCurrencyRate) {\n    const integerBaseAmount = this.transformToIntegerModel(\n      normalizeDecimalCharacter(baseAmount)\n    );\n    const integerBaseRate = this.transformToIntegerModel(baseRate);\n    const integerTargetCurrencyRate = this.transformToIntegerModel(\n      targetCurrencyRate\n    );\n\n    const amount =\n      integerBaseAmount.amount *\n      integerBaseRate.amount *\n      integerTargetCurrencyRate.amount;\n\n    if (validateIsExponential(amount)) {\n      const exponentialNumber = this.transformToExponentialModel(amount);\n      const { decimalExponent } = exponentialNumber;\n\n      const floatNumber = insertDecimalCharacter(\n        exponentialNumber.amount,\n        decimalExponent\n      );\n\n      const formated = formatExponential(\n        floatNumber,\n        exponentialNumber.exponent,\n        '.'\n      );\n      return {\n        exponentialNumber,\n        formated\n      };\n    }\n\n    const decimalExponent =\n      integerBaseRate.decimalExponent +\n      integerBaseAmount.decimalExponent +\n      integerTargetCurrencyRate.decimalExponent;\n\n    const unitExponent = getNumberLength(amount) - decimalExponent;\n\n    const exponent = unitExponent + decimalExponent;\n\n    const floatNumber = insertDecimalCharacter(amount, decimalExponent);\n    const formated = formatMoney(floatNumber, '.');\n\n    return {\n      amount,\n      decimalExponent,\n      floatNumber,\n      formated,\n      exponent,\n      unitExponent\n    };\n  }\n\n  transformToIntegerModel(number) {\n    if (validateIsInteger(number)) {\n      return {\n        amount: number,\n        decimalExponent: 0,\n        exponent: 1\n      };\n    }\n\n    const [units, decimals] = splitUnitsDecimals(number);\n    const amount = parseInt(`${units}${decimals}`);\n\n    const unitExponent = getNumberLength(units);\n    const decimalExponent = getNumberLength(decimals);\n    const exponent = unitExponent + decimalExponent;\n\n    return {\n      amount,\n      decimalExponent,\n      exponent,\n      unitExponent\n    };\n  }\n\n  transformToExponentialModel(exponentialNumber) {\n    const stringExponentialNumber = exponentialNumber.toString();\n    const isDecimalRepresentation = stringExponentialNumber.includes('-');\n    const exponentialSign = isDecimalRepresentation ? 'e-' : 'e+';\n\n    const [number, stringExponent] = stringExponentialNumber.split(\n      exponentialSign\n    );\n    const exponent = parseInt(stringExponent);\n    const integerModel = this.transformToIntegerModel(number);\n\n    return Object.assign({}, integerModel, { exponent });\n  }\n}\n\nexport default new MoneyHelper();\n","/**\n * CurrencyInput\n * This layer allow us to scalate the features related to select different bases and target\n * currencies.\n */\nimport React from 'react';\nimport { Input } from 'semantic-ui-react';\n\n/**\n * Component which works as a data transformer, taking the currency object as a property\n *\n * @returns {Component}\n */\nconst CurrencyInput = props => {\n  const { currency, error, value, onChange, readOnly } = props;\n\n  return (\n    <Input\n      fluid\n      readOnly={readOnly}\n      placeholder={currency.id}\n      error={error}\n      value={value}\n      onChange={onChange}\n      label={currency.character}\n    />\n  );\n};\n\nexport default CurrencyInput;\n","/**\n * CurrencyExchange\n */\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Segment, Grid, Button } from 'semantic-ui-react';\nimport MoneyInput from './CurrencyInput';\n\nconst CurrencyExchange = ({\n  baseCurrency,\n  baseInputValue,\n  error,\n  handleBaseCurrencyChange,\n  handleClick,\n  targetCurrency,\n  targetInputValue\n}) => {\n  return (\n    <Segment style={{ padding: '5em' }} vertical>\n      <Grid columns=\"equal\" stackable>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column textAlign=\"right\" style={{ paddingRight: '5em' }}>\n            <MoneyInput\n              currency={{ id: baseCurrency, character: '€' }}\n              error={error}\n              value={baseInputValue}\n              onChange={handleBaseCurrencyChange}\n            />\n          </Grid.Column>\n          <Grid.Column textAlign=\"left\" style={{ paddingLeft: '5em' }}>\n            <MoneyInput\n              readOnly\n              currency={{ id: targetCurrency, character: '$' }}\n              value={targetInputValue}\n            />\n          </Grid.Column>\n        </Grid.Row>\n        <Grid.Row textAlign=\"center\">\n          <Grid.Column>\n            <Button\n              style={{ width: '30vw' }}\n              content=\"Let me know!\"\n              icon=\"right arrow\"\n              labelPosition=\"right\"\n              onClick={handleClick}\n            />\n          </Grid.Column>\n        </Grid.Row>\n      </Grid>\n    </Segment>\n  );\n};\n\nCurrencyExchange.propTypes = {\n  baseCurrency: PropTypes.string,\n  baseInputValue: PropTypes.string,\n  error: PropTypes.bool,\n  handleBaseCurrencyChange: PropTypes.func,\n  handleClick: PropTypes.func,\n  targetCurrency: PropTypes.string,\n  targetInputValue: PropTypes.string\n};\n\nexport default CurrencyExchange;\n","/**\n * CurrencyExchange\n * Container whichs handles the logic to exchange between currencies.\n */\nimport React, { useEffect, useMemo, useReducer } from 'react';\nimport {\n  moneyExchangeReducer,\n  moneyExchangeInitialState\n} from '../state/reducers';\nimport { moneyExchangeActions } from '../state/actions';\nimport fetchRates from '../state/fetchers';\nimport MoneyHelper from '../helpers/money';\nimport {\n  validateNumericWithDecimals,\n  validateDecimalQuantity\n} from '../helpers/validation';\nimport CurrencyExchange from '../components/CurrencyExchange';\nimport './money-exchange.css';\n\n/**\n * This container handles the user interaction and the data fetching required to exchange between\n * currencies. If you need to check the display logic you can see CurrencyExchange component.\n *\n * @returns {Component}\n */\nconst MoneyExchange = () => {\n  const [state, dispatch] = useReducer(\n    moneyExchangeReducer,\n    moneyExchangeInitialState\n  );\n\n  const {\n    error,\n    baseCurrency,\n    baseRate,\n    baseDecimalCharacter,\n    baseInputValue,\n    ratesTimestamp,\n    targetCurrency,\n    targetRate,\n    targetInputValue\n  } = state;\n\n  const formatedExchangedValue = useMemo(() => {\n    if (error || baseInputValue === '') {\n      return '';\n    }\n\n    return MoneyHelper.convert(baseInputValue, baseRate, targetRate).formated;\n  }, [baseInputValue, baseRate, targetRate, error]);\n\n  useEffect(() => {\n    fetchRates({\n      timestamp: ratesTimestamp,\n      dispatch\n    });\n  }, [baseInputValue, ratesTimestamp]);\n\n  const handleBaseCurrencyChange = event => {\n    const { value } = event.target;\n    const isNumericWithDecimals = validateNumericWithDecimals(\n      value,\n      baseDecimalCharacter\n    );\n    const hasValidAmountOfDecimals = validateDecimalQuantity(\n      value,\n      baseDecimalCharacter\n    );\n\n    if (!isNumericWithDecimals) {\n      dispatch(\n        moneyExchangeActions.showError('Only numbers are allowed', value)\n      );\n      return;\n    }\n\n    if (!hasValidAmountOfDecimals) {\n      dispatch(\n        moneyExchangeActions.showError('Only four decimals are allowed', value)\n      );\n      return;\n    }\n\n    dispatch(moneyExchangeActions.setBaseValue(value));\n  };\n\n  const handleClick = () => {\n    if (error) {\n      return;\n    }\n\n    if (baseInputValue === '') {\n      dispatch(moneyExchangeActions.setTargetValue(''));\n      return;\n    }\n\n    dispatch(moneyExchangeActions.setTargetValue(formatedExchangedValue));\n  };\n\n  return (\n    <CurrencyExchange\n      baseCurrency={baseCurrency}\n      baseInputValue={baseInputValue}\n      error={error}\n      handleBaseCurrencyChange={handleBaseCurrencyChange}\n      handleClick={handleClick}\n      targetCurrency={targetCurrency}\n      targetInputValue={targetInputValue}\n    />\n  );\n};\n\nexport default MoneyExchange;\n","/**\n * LandingPage\n * This is the first layout which will be seen by the user.\n */\nimport React from 'react';\nimport LandingFooter from '../components/LandingFooter';\nimport ResponsiveHoc from '../hocs/Responsive';\nimport MoneyExchange from '../containers/MoneyExchange';\n\n/**\n * A responsive layout to contain the exchange component.\n *\n * @returns {Component}\n */\nconst LandingPage = () => {\n  return (\n    <ResponsiveHoc>\n      <MoneyExchange />\n      <LandingFooter />\n    </ResponsiveHoc>\n  );\n};\nexport default LandingPage;\n","/**\n * Application\n * This layer allow us to scalate the application by adding a router or a centralized store like\n * Redux.\n */\nimport React from 'react';\nimport LandingPage from './layouts/LandingPage';\n\n/**\n * Component which works as single entry point to run the aplication.\n *\n * @returns {Component}\n */\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <LandingPage />\n    </div>\n  );\n};\n\nexport default App;\n","/**\n * Single entry point to the react app.\n */\nimport React from 'react';\nimport { render } from 'react-dom';\nimport App from './App';\nimport 'semantic-ui-css/semantic.min.css';\n\n/**\n * Render the aplication in the element with id \"root\".\n */\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}